<!--
    In order for the TopLevel.xaml to work, you need to put the below xaml in your main application xaml in between the Application.Resources
    Be sure to either change YourPath below or simply drag your TopLevel.xaml into the xaml and it will populate the full path for you.

    <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="YourPath\Assets\TopLevel.xaml" />
        </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>

    If you add an Assets folder to your project, you can get away with just this:
        <ResourceDictionary Source="Assets\TopLevel.xaml" />
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >

  <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">40</sys:Double>
  <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">40</sys:Double>
  <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">40</sys:Double>
  <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">40</sys:Double>

  <sys:Double x:Key="BigWidth">200</sys:Double>
  <sys:Double x:Key="BigHeight">150</sys:Double>
  <sys:Double x:Key="DefaultHeight">40</sys:Double>

  <Color x:Key="GoreLightBlue">#FFD2DDE5</Color>
  <Color x:Key="GoreDarkBlue">#FF5D87A1</Color>

  <!--if in 4.5, need to use SystemColors.InactiveSelectionHighlightBrushKey too -->
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource GoreLightBlue}"/>
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource GoreLightBlue}"/>
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black"/>

  <SolidColorBrush x:Key="bgdGoreLightBlue" Color="{StaticResource GoreLightBlue}"/>
  <SolidColorBrush x:Key="bgdGoreDarkBlue" Color="{StaticResource GoreDarkBlue}"/>

  <LinearGradientBrush x:Key="bgdGoreWindowBlueGradient" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource GoreDarkBlue}" Offset="0" />
    <GradientStop Color="{StaticResource GoreLightBlue}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreWindowYellowGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="LightYellow" Offset="0" />
    <GradientStop Color="Yellow" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreWindowRedGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FFC41A15" Offset="0" />
    <GradientStop Color="#FF991511" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreBlueGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="{StaticResource GoreDarkBlue}" Offset="0" />
    <GradientStop Color="{StaticResource GoreLightBlue}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreBlueGradientReversed" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="{StaticResource GoreDarkBlue}" Offset="0" />
    <GradientStop Color="{StaticResource GoreLightBlue}" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreDarkBlueGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FF4F7388" Offset="0" />
    <GradientStop Color="#FFBCCCD8" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreGreenGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="Green" Offset="0" />
    <GradientStop Color="LimeGreen" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreDarkGreenGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#006A00" Offset="0" />
    <GradientStop Color="#2EBC2E" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreRedGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FFB40000" Offset="0" />
    <GradientStop Color="#FFFF4040" Offset="1" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="bgdGoreDarkRedGradient" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="#FF940000" Offset="0" />
    <GradientStop Color="#FFFF3030" Offset="1" />
  </LinearGradientBrush>

  <sys:Double x:Key="DefaultFontSize">18</sys:Double>
  <sys:Double x:Key="BigFontSize">27</sys:Double>

  <FontFamily x:Key="fntGoreFont">Calibri</FontFamily>
  <BitmapImage x:Key="icnGoreIcon" UriSource="/Assets/GoreIcon.ico" />
  <BitmapImage x:Key="imgGoreLogoImage" UriSource="/Assets/GoreLogoImage.gif" />
  <BitmapImage x:Key="imgGoreLogoImageNoSlogan" UriSource="/Assets/GoreLogoImageNoSlogan.gif" />

  <Style x:Key="GoreWindowStyle">
    <Setter Property="Control.Background" Value="{StaticResource bgdGoreWindowBlueGradient}" />
    <Setter Property="Control.FontFamily" Value="{StaticResource fntGoreFont}" />
    <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
  </Style>

  <Style x:Key="GoreFontStyle">
    <Setter Property="Control.FontFamily" Value="{StaticResource fntGoreFont}" />
    <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
  </Style>

  <Style x:Key="MainProcessStyle">
    <Setter Property="Control.FontFamily" Value="{StaticResource fntGoreFont}" />
    <Setter Property="Control.FontSize" Value="{StaticResource BigFontSize}" />
  </Style>

  <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Margin" Value="-2"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="Transparent">
            <ContentPresenter/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

  <LinearGradientBrush x:Key="GradientGrayToWhite" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="White" Offset="0" />
    <GradientStop Color="LightGray" Offset="1" />
  </LinearGradientBrush>
  
  <Style TargetType="{x:Type TabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid Height="{StaticResource DefaultHeight}" Name="Grid" Margin="-2,0,-2,-1">
            
            <Border Name="ThreeSidesBorder" BorderThickness="1,1,1,0" BorderBrush="#FF8C8E94">
              <Border Name="BottomBorder" BorderThickness="0,0,0,1" Background="{StaticResource GradientGrayToWhite}">
                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="16,2,16,2" RecognizesAccessKey="True"/>
              </Border>
            </Border>
          </Grid>
          
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="False">
              <Setter Property="Panel.ZIndex" Value="90"/>
                <Setter TargetName="BottomBorder" Property="Background" Value="{StaticResource GradientGrayToWhite}"/>
              <Setter TargetName="BottomBorder" Property="BorderBrush" Value="#FF8C8E94"/>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100"/>
              <Setter TargetName="BottomBorder" Property="Background" Value="White"/>
              <Setter TargetName="BottomBorder" Property="BorderBrush" Value="White"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="BottomBorder" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="BottomBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter TargetName="ThreeSidesBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="FontFamily" Value="{StaticResource fntGoreFont}" />
  </Style>

  <!--<Style TargetType="TabItem">
    <Setter Property="Background" Value="White"/>
    <Setter Property="Height" Value="{StaticResource DefaultHeight}"/>

  </Style> -->

  <Style TargetType="ListBoxItem">
    <Setter Property="Height" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"></Setter>
      </Trigger>
    </Style.Triggers>
    <!--<Style TargetType="{x:Type ListBoxItem}">
      <Style.Triggers>
        <Trigger Property="IsSelected" Value="True">
          <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"></Setter>
        </Trigger>
      </Style.Triggers>
    </Style>-->
  </Style>

  <Style TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="False">
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsSelected" Value="true" >
        <Setter Property="Background" Value="{StaticResource bgdGoreLightBlue}" />
      </Trigger>
    </Style.Triggers>

    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  </Style>

  <Style TargetType="TabControl">
    <Setter Property="Background" Value="White" />
    <Setter Property="Focusable" Value="False" />
  </Style>

  <Style TargetType="Menu">
    <Setter Property="Background" Value="White" />
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    <Setter Property="FontFamily" Value="{StaticResource fntGoreFont}" />
  </Style>

  <Style TargetType="MenuItem">
    <Setter Property="Background" Value="White" />
    <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    <Setter Property="FontFamily" Value="{StaticResource fntGoreFont}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <ContentPresenter VerticalAlignment="Center" Content="{Binding}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="ComboBox">
    <Setter Property="Background" Value="{StaticResource bgdGoreBlueGradientReversed}"/>
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>

  <Style TargetType="ComboBoxItem">
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>

  <Style TargetType="Label">
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>

  <Style TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="OuterBorder" CornerRadius="3" BorderThickness="1" BorderBrush="#707070" Background="{StaticResource bgdGoreBlueGradient}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Border>
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1" BorderBrush="White" Margin="1">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource bgdGoreDarkBlueGradient}" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#707070" />
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#00000000" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="InnerBorder" Property="Background" Value="#00000000" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#00000000" />
              <Setter TargetName="OuterBorder" Property="Background" Value="#F4F4F4" />
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#ADB2B5" />
              <Setter Property="Foreground" Value="#ADADAD"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="GreenButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="OuterBorder" CornerRadius="3" BorderThickness="1" BorderBrush="#707070" Background="{StaticResource bgdGoreGreenGradient}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Border>
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1" BorderBrush="White" Margin="1">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource bgdGoreDarkGreenGradient}" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#707070" />
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#00000000" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="InnerBorder" Property="Background" Value="#00000000" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#00000000" />
              <Setter TargetName="OuterBorder" Property="Background" Value="#F4F4F4" />
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#ADB2B5" />
              <Setter Property="Foreground" Value="#ADADAD"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RedButton" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="OuterBorder" CornerRadius="3" BorderThickness="1" BorderBrush="#707070" Background="{StaticResource bgdGoreRedGradient}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Border>
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1" BorderBrush="White" Margin="1">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource bgdGoreDarkRedGradient}" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#707070" />
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#00000000" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="InnerBorder" Property="Background" Value="#00000000" />
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#00000000" />
              <Setter TargetName="OuterBorder" Property="Background" Value="#F4F4F4" />
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#ADB2B5" />
              <Setter Property="Foreground" Value="#ADADAD"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- to imitate a label, wrap a textblock with this style into a grid, and set that grid height to default height -->
  <Style x:Key="TextBlockStyle" TargetType="TextBlock">
    <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
    <Setter Property="Padding" Value="3,0,3,0"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <DynamicResource 
                 ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="TextBox">
    <Setter Property="MinHeight" Value="{StaticResource DefaultHeight}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="3,0,3,0"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
      </Trigger>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="Background" >
          <Setter.Value>
            <DynamicResource 
                 ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
          </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
          <Setter.Value>
            <DynamicResource 
                 ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--The tool tip for the TextBox to display the validation error message.-->
  <!--Example-->
  <!--<TextBox Style="{StaticResource textBoxInError}" />-->
  <Style x:Key="textBoxInError" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="true">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
        <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>-->
      </Trigger>
    </Style.Triggers>
  </Style>
  
  <Style TargetType="GroupBox">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <DynamicResource 
                 ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
